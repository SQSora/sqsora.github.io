<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS下编译安装PHP7.3.31</title>
    <url>/2025/02/25/CentOS%E5%AE%89%E8%A3%85PHP7.3.31/</url>
    <content><![CDATA[<h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum groupinstall -y  <span class="string">&quot;Development Tools&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> yum install -y wget gcc libxml2 libxml2-devel openssl openssl-devel bzip2-devel libcurl-devel \</span><br><span class="line">libjpeg-devel libpng-devel freetype-devel gmp-devel sqlite-devel \</span><br><span class="line">libicu-devel libxslt-devel zlib-devel \</span><br><span class="line">curl-devel libjpeg-devel libpng-devel</span><br></pre></td></tr></table></figure></div>


<h2 id="2-下载PHP源码"><a href="#2-下载PHP源码" class="headerlink" title="2.下载PHP源码"></a>2.下载PHP源码</h2><p>下载页面:<a class="link"   href="https://www.php.net/distributions" >https://www.php.net/distributions<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">PHP_VERSION=7.3.31</span><br><span class="line"><span class="built_in">sudo</span> wget https://www.php.net/distributions/php<span class="variable">$&#123;PHP_VERSION&#125;</span>.tar.gz</span><br><span class="line"><span class="built_in">sudo</span> tar -zxvf php-<span class="variable">$&#123;PHP_VERSION&#125;</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> php-<span class="variable">$&#123;PHP_VERSION&#125;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="3-配置编译选项"><a href="#3-配置编译选项" class="headerlink" title="3.配置编译选项"></a>3.配置编译选项</h2><ul>
<li><code>--with-fpm-user/group</code> 指定 FPM 运行的用户&#x2F;组（需提前创建）。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ./configure --prefix=/usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span> \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--with-fpm-user=www \</span><br><span class="line">--with-fpm-group=www \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-curl \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--with-pdo-mysql \</span><br><span class="line">--with-mysqli \</span><br><span class="line">--with-gd \</span><br><span class="line">--with-jpeg-dir=/usr \</span><br><span class="line">--with-png-dir=/usr \</span><br><span class="line">--with-freetype-dir=/usr \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-exif \</span><br><span class="line">--enable-pcntl</span><br><span class="line"></span><br><span class="line"><span class="comment"># --prefix 指定安装目录</span></span><br><span class="line"><span class="comment"># --with-config-file-path 指定配置文件目录</span></span><br><span class="line"><span class="comment"># --enable-fpm 启用PHP-FPM</span></span><br><span class="line"><span class="comment"># --with-fpm-user 指定PHP-FPM运行用户 需提前创建</span></span><br><span class="line"><span class="comment"># --with-fpm-group 指定PHP-FPM运行用户组 需提前创建</span></span><br></pre></td></tr></table></figure></div>
<h2 id="4-编译并安装"><a href="#4-编译并安装" class="headerlink" title="4.编译并安装"></a>4.编译并安装</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make &amp;&amp; <span class="built_in">sudo</span> make install</span><br><span class="line"><span class="comment"># sudo make -j4 &amp;&amp; sudo make install # 或者使用4核编译</span></span><br><span class="line"><span class="comment"># sudo make -j$(nproc) &amp;&amp; sudo make install # 或者拉满核心</span></span><br></pre></td></tr></table></figure></div>

<h2 id="5-配置PHP"><a href="#5-配置PHP" class="headerlink" title="5.配置PHP"></a>5.配置PHP</h2><ul>
<li>复制配置文件</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> php.ini-production /usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/etc/php.ini</span><br><span class="line"><span class="comment"># 或生产环境配置</span></span><br><span class="line"><span class="comment"># sudo cp php.ini-production /usr/local/php$&#123;PHP_VERSION&#125;/etc/php.ini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 PHP-FPM（如果启用）</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> /usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/etc/php-fpm.conf.default /usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/etc/php-fpm.conf</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> /usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/etc/php-fpm.d/www.conf.default /usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure></div>
<ul>
<li>设置软链接</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用-f可覆盖文件</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s <span class="string">&quot;/usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/bin/php&quot;</span> <span class="string">&quot;/usr/bin/php<span class="variable">$&#123;PHP_VERSION&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s <span class="string">&quot;/usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/sbin/php-fpm&quot;</span> <span class="string">&quot;/usr/bin/php-fpm<span class="variable">$&#123;PHP_VERSION&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>验证安装</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查 PHP 版本</span></span><br><span class="line">/usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/bin/php -v</span><br></pre></td></tr></table></figure></div>

<h2 id="7-配置PHP-FPM"><a href="#7-配置PHP-FPM" class="headerlink" title="7.配置PHP-FPM"></a>7.配置PHP-FPM</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ERROR: [pool www] cannot get uid for user &#x27;www&#x27;</span></span><br><span class="line"><span class="comment"># 创建www用户</span></span><br><span class="line"><span class="built_in">sudo</span> useradd -r -s /sbin/nologin www</span><br><span class="line"><span class="comment"># 或修改www.conf的启动用户</span></span><br><span class="line"><span class="built_in">sudo</span> vi /usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/etc/php-fpm.d/www.conf</span><br><span class="line">user = www</span><br><span class="line">group = www</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置软连接,使用-f可覆盖文件</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s <span class="string">&quot;/usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/sbin/php-fpm&quot;</span> <span class="string">&quot;/usr/bin/php-fpm<span class="variable">$&#123;PHP_VERSION&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">/usr/local/php<span class="variable">$&#123;PHP_VERSION&#125;</span>/sbin/php-fpm</span><br><span class="line"><span class="comment">#结束查询进程,kill掉master进程</span></span><br><span class="line">pstree -p | grep php-fpm</span><br></pre></td></tr></table></figure></div>


<h2 id="6-集成到-Web-服务器"><a href="#6-集成到-Web-服务器" class="headerlink" title="6.集成到 Web 服务器"></a>6.集成到 Web 服务器</h2><ul>
<li>Nginx</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    root /var/www/html;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="终端脚本"><a href="#终端脚本" class="headerlink" title="#终端脚本#"></a>#终端脚本#</h2><ul>
<li><code>vi install_php.sh</code></li>
<li><code>chmod +x install_php.sh</code></li>
<li><code>./install_php.sh</code></li>
</ul>
<div class="code-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查当前用户是否具有 root 或 <span class="built_in">sudo</span> 权限</span></span><br><span class="line">if [ &quot;$EUID&quot; -ne 0 ] &amp;&amp; ! sudo -n true 2&gt;/dev/null; then</span><br><span class="line">    echo &quot;错误：请以 root 用户或使用 sudo 运行此脚本。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提示用户输入 PHP 版本</span></span><br><span class="line">read -p &quot;请输入完整的PHP版本 (如: 7.3.31): &quot; PHP_FILE</span><br><span class="line">if [ -z &quot;$PHP_FILE&quot; ]; then</span><br><span class="line">    echo &quot;错误：请输入正确的版本号。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提取主版本号（如 7.3）</span></span><br><span class="line">PHP_VERSION=$(echo &quot;$PHP_FILE&quot; | cut -d &#x27;.&#x27; -f 1,2)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提示用户输入 php-fpm 启动用户</span></span><br><span class="line">read -p &quot;请输入 php-fpm 启动用户 (默认: www): &quot; FPM_USER</span><br><span class="line">FPM_USER=$&#123;FPM_USER:-www&#125;  # 如果用户未输入，则使用默认值 &quot;www&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查用户是否存在，如果不存在则创建</span></span><br><span class="line">if ! id &quot;$FPM_USER&quot; &amp;&gt;/dev/null; then</span><br><span class="line">    echo &quot;用户 $FPM_USER 不存在，正在创建...&quot;</span><br><span class="line">    sudo useradd -r -s /sbin/nologin &quot;$FPM_USER&quot;</span><br><span class="line">    if [ $? -ne 0 ]; then</span><br><span class="line">        echo &quot;错误：无法创建用户 $FPM_USER，请手动创建。&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;用户 $FPM_USER 创建成功。&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;用户 $FPM_USER 已存在，跳过创建。&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装开发工具和依赖库</span></span><br><span class="line">echo &quot;正在安装开发工具和依赖库...&quot;</span><br><span class="line">sudo yum groupinstall -y &quot;Development Tools&quot;</span><br><span class="line">sudo yum install -y wget gcc libxml2 libxml2-devel openssl openssl-devel bzip2-devel libcurl-devel \</span><br><span class="line">libjpeg-devel libpng-devel freetype-devel gmp-devel sqlite-devel \</span><br><span class="line">libicu-devel libxslt-devel zlib-devel \</span><br><span class="line">curl-devel libjpeg-devel libpng-devel</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查是否存在 PHP 源码包文件，如果不存在则下载</span></span><br><span class="line">if [ ! -f &quot;php-$&#123;PHP_FILE&#125;.tar.gz&quot; ]; then</span><br><span class="line">    echo &quot;正在下载 php-$&#123;PHP_FILE&#125;.tar.gz...&quot;</span><br><span class="line">    sudo wget &quot;https://www.php.net/distributions/php-$&#123;PHP_FILE&#125;.tar.gz&quot;</span><br><span class="line">    # 检查 wget 命令是否成功</span><br><span class="line">    if [ $? -ne 0 ]; then</span><br><span class="line">        echo &quot;错误：下载 php-$&#123;PHP_FILE&#125;.tar.gz 失败，请尝试手动下载并放在当前目录。&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">else</span><br><span class="line">    echo &quot;php-$&#123;PHP_FILE&#125;.tar.gz 已存在，跳过下载。&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压 PHP 源码包</span></span><br><span class="line">echo &quot;正在解压 php-$&#123;PHP_FILE&#125;.tar.gz...&quot;</span><br><span class="line">sudo tar -zxvf &quot;php-$&#123;PHP_FILE&#125;.tar.gz&quot;</span><br><span class="line">cd &quot;php-$&#123;PHP_FILE&#125;&quot; || &#123; echo &quot;错误：无法进入 php-$&#123;PHP_FILE&#125; 目录。&quot;; exit 1; &#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置、编译和安装 PHP</span></span><br><span class="line">echo &quot;正在配置 PHP...&quot;</span><br><span class="line">sudo ./configure --prefix=&quot;/usr/local/php$&#123;PHP_VERSION&#125;&quot; \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--with-fpm-user=&quot;$FPM_USER&quot; \</span><br><span class="line">--with-fpm-group=&quot;$FPM_USER&quot; \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-curl \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--with-pdo-mysql \</span><br><span class="line">--with-mysqli \</span><br><span class="line">--with-gd \</span><br><span class="line">--with-jpeg-dir=/usr \</span><br><span class="line">--with-png-dir=/usr \</span><br><span class="line">--with-freetype-dir=/usr \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-exif \</span><br><span class="line">--enable-pcntl</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo &quot;错误：PHP 配置失败，请检查依赖库是否安装完整。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;正在编译 PHP...&quot;</span><br><span class="line">sudo make -j$(nproc)</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo &quot;错误：PHP 编译失败，请检查错误日志。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;正在安装 PHP...&quot;</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo &quot;错误：PHP 安装失败，请检查权限或磁盘空间。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制配置文件</span></span><br><span class="line">echo &quot;正在复制配置文件...&quot;</span><br><span class="line">sudo cp php.ini-production &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php.ini&quot;</span><br><span class="line">sudo cp &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php-fpm.conf.default&quot; &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php-fpm.conf&quot;</span><br><span class="line">sudo cp &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php-fpm.d/www.conf.default&quot; &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php-fpm.d/www.conf&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 php-fpm 配置文件中的用户和组</span></span><br><span class="line">echo &quot;正在配置 php-fpm 启动用户为 $FPM_USER...&quot;</span><br><span class="line">sudo sed -i &quot;s/^user = .*/user = $FPM_USER/&quot; &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php-fpm.d/www.conf&quot;</span><br><span class="line">sudo sed -i &quot;s/^group = .*/group = $FPM_USER/&quot; &quot;/usr/local/php$&#123;PHP_VERSION&#125;/etc/php-fpm.d/www.conf&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查 PHP 版本</span></span><br><span class="line">echo &quot;PHP 安装完成，正在检查版本...&quot;</span><br><span class="line"><span class="meta prompt_">/usr/local/php$</span><span class="language-bash">&#123;PHP_VERSION&#125;/bin/php -v</span></span><br><span class="line"></span><br><span class="line">echo &quot;PHP $&#123;PHP_FILE&#125; 安装成功！&quot;</span><br><span class="line">echo &quot;php-fpm 启动用户已设置为 $FPM_USER。&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建符号链接</span></span><br><span class="line">echo &quot;正在创建符号链接...&quot;</span><br><span class="line">sudo ln -s &quot;/usr/local/php$&#123;PHP_VERSION&#125;/bin/php&quot; &quot;/usr/bin/php$&#123;PHP_VERSION&#125;&quot;</span><br><span class="line">sudo ln -s &quot;/usr/local/php$&#123;PHP_VERSION&#125;/sbin/php-fpm&quot; &quot;/usr/bin/php-fpm$&#123;PHP_VERSION&#125;&quot;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>Linux</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS下编译安装nginx</title>
    <url>/2025/03/22/CentOS%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</url>
    <content><![CDATA[<h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install -y gcc make openssl-devel pcre-devel zlib-devel</span><br></pre></td></tr></table></figure></div>

<h2 id="2-下载nginx源码"><a href="#2-下载nginx源码" class="headerlink" title="2.下载nginx源码"></a>2.下载nginx源码</h2><p>下载页面：(<a class="link"   href="https://nginx.org/en/download.html" >https://nginx.org/en/download.html<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>)</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">NGINX_VERSION=1.27.4</span><br><span class="line"><span class="built_in">sudo</span> wget https://nginx.org/download/nginx-<span class="variable">$&#123;NGINX_VERSION&#125;</span>.tar.gz</span><br><span class="line"><span class="built_in">sudo</span> tar -zxvf nginx-<span class="variable">$&#123;NGINX_VERSION&#125;</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-<span class="variable">$&#123;NGINX_VERSION&#125;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="3-编译与安装"><a href="#3-编译与安装" class="headerlink" title="3.编译与安装"></a>3.编译与安装</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编译</span></span><br><span class="line">./configure --prefix=/usr/local/nginx-<span class="variable">$&#123;NGINX_VERSION&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line"><span class="built_in">sudo</span> make &amp;&amp; <span class="built_in">sudo</span> make install</span><br><span class="line"><span class="comment"># sudo make -j4 &amp;&amp; sudo make install # 或者使用4核编译</span></span><br><span class="line"><span class="comment"># sudo make -j$(nproc) &amp;&amp; sudo make install # 或者拉满核心</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 nginx 版本</span></span><br><span class="line">/usr/local/nginx-<span class="variable">$&#123;NGINX_VERSION&#125;</span>/sbin/ngxin -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置软链接</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s <span class="string">&quot;/usr/local/nginx<span class="variable">$&#123;NGINX_VERSION&#125;</span>/sbin/nginx&quot;</span> <span class="string">&quot;/usr/bin/nginx<span class="variable">$&#123;NGINX_VERSION&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="4-启动nginx"><a href="#4-启动nginx" class="headerlink" title="4.启动nginx"></a>4.启动nginx</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">/usr/local/nginx-<span class="variable">$&#123;NGINX_VERSION&#125;</span>/sbin/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">nginx<span class="variable">$&#123;NGINX_VERSION&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">nginx<span class="variable">$&#123;NGINX_VERSION&#125;</span> -s stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载配置</span></span><br><span class="line">nginx<span class="variable">$&#123;NGINX_VERSION&#125;</span> -s reload</span><br></pre></td></tr></table></figure></div>
<h2 id="5-使用不同域名访问不同项目"><a href="#5-使用不同域名访问不同项目" class="headerlink" title="5.使用不同域名访问不同项目"></a>5.使用不同域名访问不同项目</h2><ul>
<li>进入配置文件  <code>cd /usr/local/nginx-$&#123;NGINX_VERSION&#125;/conf</code></li>
<li>编辑配置文件<code>vim nginx.conf</code></li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">            ###省略###</span><br><span class="line">    #引入其它配置</span><br><span class="line">    include       vhost/*.conf;</span><br><span class="line">            ####省略###</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>创建文件夹    <code>mkdir vhost</code></li>
<li>在文件夹内新建 sqsora.com.conf</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name sqsora.org www.sqsora.org;</span><br><span class="line"></span><br><span class="line">    root /var/www/sqsora.org;</span><br><span class="line">    index index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>


<h2 id="终端脚本"><a href="#终端脚本" class="headerlink" title="#终端脚本#"></a>#终端脚本#</h2><ul>
<li><code>vi install_nginx.sh</code></li>
<li><code>chmod +x install_nginx.sh</code></li>
<li><code>./install_nginx.sh</code></li>
</ul>
<div class="code-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查当前用户是否具有 root 或 <span class="built_in">sudo</span> 权限</span></span><br><span class="line">if [ &quot;$EUID&quot; -ne 0 ] &amp;&amp; ! sudo -n true 2&gt;/dev/null; then</span><br><span class="line">    echo &quot;错误：请以 root 用户或使用 sudo 运行此脚本。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提示用户输入 nginx 版本</span></span><br><span class="line">read -p &quot;请输入完整的nginx版本 (如: 1.27.4): &quot; NGINX_FILE</span><br><span class="line">if [ -z &quot;$NGINX_FILE&quot; ]; then</span><br><span class="line">    echo &quot;错误：请输入正确的版本号。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提取主版本号（如 7.3）</span></span><br><span class="line">NGINX_VERSION=$(echo &quot;$NGINX_FILE&quot; | cut -d &#x27;.&#x27; -f 1,2)</span><br><span class="line"></span><br><span class="line">read -p &quot;请输入 nginx 启动用户,需手动编辑配置文件 (默认: nginx) : &quot; NGINX_USER</span><br><span class="line">NGINX_USER=$&#123;NGINX_USER:-nginx&#125;  # 如果用户未输入，则使用默认值 &quot;nginx&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查用户是否存在，如果不存在则创建</span></span><br><span class="line">if ! id &quot;$NGINX_USER&quot; &amp;&gt;/dev/null; then</span><br><span class="line">    echo &quot;用户 $NGINX_USER 不存在，正在创建...&quot;</span><br><span class="line">    sudo useradd -r -s /sbin/nologin &quot;$NGINX_USER&quot;</span><br><span class="line">    if [ $? -ne 0 ]; then</span><br><span class="line">        echo &quot;错误：无法创建用户 $NGINX_USER，请手动创建。&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;用户 $NGINX_USER 创建成功。&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;用户 $NGINX_USER 已存在，跳过创建。&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装开发工具和依赖库</span></span><br><span class="line">echo &quot;正在安装开发工具和依赖库...&quot;</span><br><span class="line">sudo yum install -y gcc make openssl-devel pcre-devel zlib-devel</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查是否存在 nginx 源码包文件，如果不存在则下载</span></span><br><span class="line">if [ ! -f &quot;nginx-$&#123;NGINX_FILE&#125;.tar.gz&quot; ]; then</span><br><span class="line">    echo &quot;正在下载 nginx-$&#123;NGINX_FILE&#125;.tar.gz...&quot;</span><br><span class="line">    sudo wget https://nginx.org/download/nginx-$&#123;NGINX_FILE&#125;.tar.gz</span><br><span class="line">    # 检查 wget 命令是否成功</span><br><span class="line">    if [ $? -ne 0 ]; then</span><br><span class="line">        echo &quot;错误：下载 nginx-$&#123;NGINX_FILE&#125;.tar.gz 失败，请尝试手动下载并放在当前目录。&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">else</span><br><span class="line">    echo &quot;nginx-$&#123;NGINX_FILE&#125;.tar.gz 已存在，跳过下载。&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压 nginx 源码包</span></span><br><span class="line">echo &quot;正在解压 nginx-$&#123;NGINX_FILE&#125;.tar.gz...&quot;</span><br><span class="line">sudo tar -zxvf &quot;nginx-$&#123;NGINX_FILE&#125;.tar.gz&quot;</span><br><span class="line">cd &quot;nginx-$&#123;NGINX_FILE&#125;&quot; || &#123; echo &quot;错误：无法进入 nginx-$&#123;NGINX_FILE&#125; 目录。&quot;; exit 1; &#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置、编译和安装 nginx</span></span><br><span class="line">echo &quot;正在配置 nginx...&quot;</span><br><span class="line">sudo ./configure --prefix=/usr/local/nginx$&#123;NGINX_VERSION&#125;</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo &quot;错误：nginx 配置失败，请检查依赖库是否安装完整。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;正在编译 nginx...&quot;</span><br><span class="line">sudo make -j$(nproc)</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo &quot;错误：nginx 编译失败，请检查错误日志。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;正在安装 nginx...&quot;</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">    echo &quot;错误：nginx 安装失败，请检查权限或磁盘空间。&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建符号链接</span></span><br><span class="line">echo &quot;正在创建符号链接...&quot;</span><br><span class="line">sudo ln -s &quot;/usr/local/nginx$&#123;NGINX_VERSION&#125;/sbin/nginx&quot; &quot;/usr/bin/nginx$&#123;NGINX_VERSION&#125;&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查 nginx 版本</span></span><br><span class="line">echo &quot;nginx 安装完成，正在检查版本...&quot;</span><br><span class="line"><span class="meta prompt_">/usr/local/nginx$</span><span class="language-bash">&#123;NGINX_VERSION&#125;/sbin/nginx -v</span></span><br><span class="line"></span><br><span class="line">echo &quot;nginx $&#123;NGINX_FILE&#125; 安装成功！&quot;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 8.5.2211安装</title>
    <url>/2025/02/22/CetnOS%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="替换安装源"><a href="#替换安装源" class="headerlink" title="替换安装源"></a>替换安装源</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份原有的repo文件</span></span><br><span class="line"><span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br><span class="line"><span class="comment"># 切换至清华大学的yum源，其中8.5.2111为CentOS版本号</span></span><br><span class="line">sed -e <span class="string">&quot;s|^mirrorlist=|#mirrorlist=|g&quot;</span> \</span><br><span class="line">    -e <span class="string">&quot;s|^#baseurl=http://mirror.centos.org/centos/\$releasever|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/8.5.2111|g&quot;</span> \</span><br><span class="line">    -e <span class="string">&quot;s|^#baseurl=http://mirror.centos.org/\$contentdir/\$releasever|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/8.5.2111|g&quot;</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/CentOS-*.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新软件包缓存</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure></div>

<h3 id="安装SSH-server"><a href="#安装SSH-server" class="headerlink" title="安装SSH-server"></a>安装SSH-server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y openssh-server</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/02/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 GitHub Action 自动部署 Hexo</title>
    <url>/2025/02/16/hexo-github-action/</url>
    <content><![CDATA[<h2 id="创建并初始化Hexo项目"><a href="#创建并初始化Hexo项目" class="headerlink" title="创建并初始化Hexo项目"></a>创建并初始化Hexo项目</h2><p>如果你没有Hexo,点击可查看<a href="/2025/02/15/hexo-install/">新建Hexo项目</a></p>
<h2 id="创建Github-SSH密钥"><a href="#创建Github-SSH密钥" class="headerlink" title="创建Github SSH密钥"></a>创建Github SSH密钥</h2><p>Github已不再支持HTTP PUSH,点击可查看<a href="/2025/02/15/hexo-install/">生成SSH秘钥并上传至GitHub</a></p>
<h2 id="在-GitHub-上添加部署-Action-私钥"><a href="#在-GitHub-上添加部署-Action-私钥" class="headerlink" title="在 GitHub 上添加部署 Action 私钥"></a>在 GitHub 上添加部署 Action 私钥</h2><ol>
<li><p>在GItHub中创建2个代码仓库,一个为私密仓库用于存放Hexo源码,一个为公开仓库用于存放Hexo编译后的静态文件。</p>
</li>
<li><p>现在需要创建一个令牌,从 Hexo 代码仓库中运行 Github Actions 向 username.github.io 仓库推送代码。</p>
</li>
</ol>
<ul>
<li><p>选择右上角头像 -&gt; 打开 <code>Settings</code> -&gt; 左边栏最后面找到 <code>Develop Setting</code>。</p>
</li>
<li><p>找到 <code>Personal Access Token</code> 点击 <code>Tokens(classic)</code> -&gt; 选择 <code>Generate new token (classic)</code>。</p>
</li>
<li><p>在<code>Note</code>写入备注 -&gt; <code>Expiration</code>可选永不过期<code>No expiration</code> -&gt; 给 <code>repo</code> 里面的全部访问权限，然后<button style="background-color: #4CAF50;padding: 3px 12px;font-size: 12px;line-height: 20px;border-radius: 6px;">Generate token</button>生成一个令牌。(生成后只会显示一次，请妥善保存)</p>
</li>
<li><p>回到代码仓库进入 <code>Settings</code> -&gt; <code>Secrets and variables</code> -&gt; <code>Actions</code> -&gt;  <button style="background-color: #4CAF50;padding: 3px 12px;font-size: 12px;line-height: 20px;border-radius: 6px;">New respository secret</button></p>
</li>
<li><p><code>Name</code>自定义一个变量名称(后面会用到这个变量名), <code>Secrets</code>填入生成的令牌。</p>
</li>
</ul>
<h2 id="创建-Github-Actions-脚本"><a href="#创建-Github-Actions-脚本" class="headerlink" title="创建 Github Actions 脚本"></a>创建 Github Actions 脚本</h2><ul>
<li>在你的 Hexo 项目根目录下创建一个 .github&#x2F;workflows 文件夹。</li>
<li>在该文件夹内创建一个新的 YAML 文件(如 hexo-deploy.yml)用于定义 GitHub Actions 工作流。</li>
<li>复制如下配置到 YAML 文件</li>
</ul>
<div class="code-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># 或你使用的默认分支名称</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">blog</span> <span class="string">source</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16&quot;</span> <span class="comment"># 设置 Node.js 版本</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-node-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Hexo</span> <span class="string">CLI</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">static</span> <span class="string">pages</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PERSONAL_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./blog/public</span></span><br><span class="line">          <span class="attr">external_repository:</span> <span class="string">username/username.github.io</span> <span class="comment"># 更改为你的 GitHub Pages 仓库, username 是你的用户名</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">main</span> <span class="comment"># GitHub Pages 分支</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<ul>
<li>提交代码到Hexo源码仓库,然后查看Actions是否运行成功,如果成功则会自动部署到GitHub Page仓库。<br><a class="link"   href="http://sqsora.github.io/" >SQSora Blog<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>GitHub Action</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo安装</title>
    <url>/2025/02/14/hexo-install/</url>
    <content><![CDATA[<h2 id="安装node-js-npm"><a href="#安装node-js-npm" class="headerlink" title="安装node.js npm"></a>安装node.js npm</h2><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><p>(略)</p>
<h3 id="npm换源"><a href="#npm换源" class="headerlink" title="npm换源"></a>npm换源</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com <span class="comment">#淘宝 NPM 镜像</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://npm.aliyun.com <span class="comment">#阿里云镜像</span></span><br><span class="line">npm config <span class="built_in">set</span> registry http://mirrors.cloud.tencent.com/npm/ <span class="comment">#腾讯云镜像</span></span><br></pre></td></tr></table></figure></div>

<h2 id="使用npm安装Hexo"><a href="#使用npm安装Hexo" class="headerlink" title="使用npm安装Hexo"></a>使用npm安装Hexo</h2><ul>
<li>使用npm安装Hexo</li>
<li>如需要部署到git page 那么需要安装deployer。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure></div>

<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init      <span class="comment"># 初始化Hexo 需要空文件夹</span></span><br><span class="line">npm install    <span class="comment"># 安装相关依赖</span></span><br><span class="line"></span><br><span class="line">hexo g   <span class="comment"># 生成页面</span></span><br><span class="line">hexo s   <span class="comment"># 启动预览</span></span><br><span class="line"></span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s --debug <span class="comment">#清除 生成 启动 一键三连!</span></span><br></pre></td></tr></table></figure></div>

<h3 id="Hexo结构"><a href="#Hexo结构" class="headerlink" title="Hexo结构"></a>Hexo结构</h3><div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">_config.yml     #网站的配置信息不可热更新</span><br><span class="line">package.json    #应用程序的信息</span><br><span class="line">scaffolds       #模版文件夹</span><br><span class="line">source          #存放用户资源，Markdown 文档</span><br><span class="line">    - _drafts   #草稿箱</span><br><span class="line">    - _posts    #开头为_(下划线)的文件/文件夹和隐藏的文件将会被忽略</span><br><span class="line">themes          #主题文件夹</span><br><span class="line">public          #网站文件</span><br></pre></td></tr></table></figure></div>
<h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><p>使用当前命令将从<code>/hexo/scaffolds/post.md</code>模板中生成一个文章文件</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;new article&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>文章可以拥有如下属性(根据主题不同可能含有不同的特性):</p>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date：  文章创建日期</span><br><span class="line">updated：   文章修改日期 </span><br><span class="line">expires: 过期时间 (2025-02-15 23:52:69)</span><br><span class="line">cover: 文章内头图</span><br><span class="line">thumbnail: 缩略图</span><br><span class="line">excerpt: 文章摘要</span><br><span class="line">categories  #分类</span><br><span class="line">tags: - &quot;Hexo&quot; -&quot;tag1&quot; -&quot;tag2&quot; #文章标签</span><br><span class="line">comments:   是否开启评论 true</span><br></pre></td></tr></table></figure></div>

<h3 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h3><p>运行后会在 source&#x2F;&lt;页面名称&gt; 中生成 index.html</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page about</span><br><span class="line">$ hexo new page &lt;页面名称&gt;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Icarus主题安装</title>
    <url>/2025/02/14/hexo-theme/</url>
    <content><![CDATA[<h3 id="方式一：通过-git-克隆安装-推荐"><a href="#方式一：通过-git-克隆安装-推荐" class="headerlink" title="方式一：通过 git 克隆安装(推荐)"></a>方式一：通过 git 克隆安装(推荐)</h3><p>最新的 Icarus 使用 npm 安装的话是安装到 node_modules 下的。最好直接 git clone 一份到themes目录或者是复制出来，hexo 加载 themes 目录下的主题优先级是大于 node_modules 目录。 项目地址: <code>https://github.com/ppoffice/hexo-theme-icarus</code></p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --branch 6.1.0 --depth 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#另外，你也可以使用下面的命令将Icarus安装为Git子模块(submodule)：</span></span><br><span class="line">git submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --branch 6.1.0 --depth 1</span><br></pre></td></tr></table></figure></div>

<p>运行安装 semver dependencies等相关依赖</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -S semver@^7.5.4 hexo-renderer-inferno@^1.0.2  hexo-component-inferno@^3.1.2 bulma-stylus@0.8.0</span><br></pre></td></tr></table></figure></div>

<h2 id="方式二：通过npm-安装"><a href="#方式二：通过npm-安装" class="headerlink" title="方式二：通过npm 安装"></a>方式二：通过npm 安装</h2><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-theme-icarus</span><br><span class="line">$ hexo config theme icarus</span><br></pre></td></tr></table></figure></div>

<h1 id="配置-Icarus-主题"><a href="#配置-Icarus-主题" class="headerlink" title="配置 Icarus 主题"></a>配置 Icarus 主题</h1><p>打开 站点配置文件_config.yml， 找到 theme 字段，并将其值更改为 icarus 或者使用 hexo命令</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">theme: icarus</span><br><span class="line">或者</span><br><span class="line">hexo config theme icarus</span><br></pre></td></tr></table></figure></div>

<h1 id="配置作者资料卡"><a href="#配置作者资料卡" class="headerlink" title="配置作者资料卡"></a>配置作者资料卡</h1><p>编辑配置文件 <code>_config.icarus.yml</code></p>
<div class="code-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">profile</span></span><br><span class="line">    <span class="comment"># 作者名称</span></span><br><span class="line">    <span class="attr">author:</span> <span class="string">SQSora</span></span><br><span class="line">    <span class="comment"># 作者头衔</span></span><br><span class="line">    <span class="attr">author_title:</span> <span class="string">SQSora</span> <span class="string">Blog</span></span><br><span class="line">    <span class="comment"># 作者所在地/公司</span></span><br><span class="line">    <span class="attr">location:</span> <span class="string">常盤台私立中学</span></span><br><span class="line">    <span class="comment"># 头像图片地址</span></span><br><span class="line">    <span class="attr">avatar:</span> </span><br><span class="line">    <span class="comment"># 是否显示圆形头像</span></span><br><span class="line">    <span class="attr">avatar_rounded:</span> <span class="string">ture</span></span><br><span class="line">    <span class="comment"># Gravatar邮箱(如不设置`avatar`项)</span></span><br><span class="line">    <span class="attr">gravatar:</span></span><br><span class="line">    <span class="comment"># 关注按钮链接地址</span></span><br><span class="line">    <span class="attr">follow_link:</span> <span class="string">&quot;https://github.com/SQSora/SQSora&quot;</span></span><br><span class="line">    <span class="comment"># 社交媒体链接</span></span><br><span class="line">    <span class="attr">social_links:</span></span><br><span class="line">      <span class="attr">Github:</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">&quot;https://github.com/SQSora&quot;</span></span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Hexo Theme</tag>
      </tags>
  </entry>
  <entry>
    <title>生成SSH秘钥并上传至GitHub</title>
    <url>/2025/02/16/%E7%94%9F%E6%88%90SSH%E7%A7%98%E9%92%A5%E5%B9%B6%E4%B8%8A%E4%BC%A0%E8%87%B3GitHub/</url>
    <content><![CDATA[<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>(略)</p>
<h3 id="查看是否已有密钥"><a href="#查看是否已有密钥" class="headerlink" title="查看是否已有密钥"></a>查看是否已有密钥</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ <span class="built_in">cd</span> ./.ssh/</span><br><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure></div>

<h3 id="如已有密钥可跳转到上传部分"><a href="#如已有密钥可跳转到上传部分" class="headerlink" title="如已有密钥可跳转到上传部分"></a>如已有密钥可跳转到<a href="#upload-ssh" style="color:var(--primary-color);">上传部分</a></h3><ul>
<li>检查是否配置过git。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure></div>
<ul>
<li>如果之前没有配置则:</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &lt;名称&gt; </span><br><span class="line">$ git config --global user.email &lt;邮箱&gt;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>生成秘钥:</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -t 指定密钥类型，默认 rsa 有RSA和DSA</span></span><br><span class="line"><span class="comment"># -b 4096 指定密钥的长度为4096位，这比默认的2048位更安全。</span></span><br><span class="line"><span class="comment"># -C 为生成的密钥添加一个注释（通常是你的电子邮件地址），以便于识别。</span></span><br><span class="line">$ ssh-keygen -t rsa -b 4096 -C &lt;邮箱&gt;</span><br></pre></td></tr></table></figure></div>

<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;sqsora@email.com&quot;</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):   <span class="comment">#密钥文件默认存放位置</span></span><br><span class="line">Created directory <span class="string">&#x27;/root/.ssh&#x27;</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): <span class="comment">#输入密钥密码，可直接按 Enter 留空</span></span><br><span class="line">Enter same passphrase again:     <span class="comment"># 再输入一遍密钥密码</span></span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.    <span class="comment"># 生成的私钥路径</span></span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.    <span class="comment"># 生成的公钥路径</span></span><br><span class="line">The key fingerprint is:</span><br><span class="line">***********************************</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|           +.    |</span></span><br><span class="line"><span class="string">*******************</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure></div>


<h3 id="查看密钥"><a href="#查看密钥" class="headerlink" title="查看密钥"></a><a name="upload-ssh"></a>查看密钥</h3>
  <div class="note p-4 mb-4 rounded-small danger">
    <p>除非你确定自己在做什么，否则不应该将<strong>id_rsa的密钥</strong>泄露给任何人。</p>

  </div>

<p>生成成功后进入<code>~/.ssh</code>目录，至少包含 <code>id_rsa</code> <code>id_rsa.pub</code> 这两个文件。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">id_rsa id_rsa.pub</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cat</span> id_rsa.pub    <span class="comment"># 打印id_rsa.pub(公钥)的内容</span></span><br><span class="line">ssh-rsa AAAAa5Iyc2E0B1NzCXJ******</span><br></pre></td></tr></table></figure></div>

<h3 id="上传到GitHub"><a href="#上传到GitHub" class="headerlink" title="上传到GitHub"></a>上传到GitHub</h3><ul>
<li><p>登录<code>GitHub</code>,打开 <code>Settings</code> 页面 [<a class="link"   href="https://github.com/settings/profile" >https://github.com/settings/profile<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>]</p>
</li>
<li><p>在左边目录，选择<code>SSH and GPG keys</code>。</p>
</li>
<li><p>在<code>SSH keys</code>页面点击 <button style="background-color: #4CAF50;padding: 3px 12px;font-size: 12px;line-height: 20px;border-radius: 6px;">New SSH key</button></p>
</li>
<li><p><code>Title</code>内容随便写 <code>Key</code>则将上面的公钥粘贴上去。</p>
</li>
</ul>
<h3 id="测试-SSH-连接"><a href="#测试-SSH-连接" class="headerlink" title="测试 SSH 连接"></a>测试 SSH 连接</h3><ul>
<li>运行该命令:</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></div>

<ul>
<li>可能会看到类似如下的警告：</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; The authenticity of host &#x27;github.com (IP ADDRESS)&#x27; can&#x27;t be established.</span><br><span class="line">&gt; ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.</span><br><span class="line">&gt; Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure></div>

<ul>
<li>验证所看到消息中的指纹是否与 GitHub 的公钥指纹匹配。 如果是则键入 <code>yes</code>：</li>
</ul>
<div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; Hi &lt;名称&gt;! You&#x27;ve successfully authenticated, but GitHub does not</span><br><span class="line">&gt; provide shell access.</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
